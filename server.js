const { Telegraf } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ (—á—Ç–æ–±—ã ctx.botInfo –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω)
bot.telegram.getMe().then((botInfo) => {
  bot.botInfo = botInfo;
  console.log(`–ë–æ—Ç @${botInfo.username} –∑–∞–ø—É—â–µ–Ω!`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–ø–ª–∞–µ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ ID –±–æ—Ç–∞)
bot.on('message', async (ctx) => {
  console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', ctx.message.text); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  const reply = ctx.message.reply_to_message;
  if (reply && reply.from.id === ctx.botInfo.id) {
    const userName = ctx.from.first_name || '–¥—Ä—É–≥';
    await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç, *${userName}*! –ß–µ–º –ø–æ–º–æ—á—å? üòä`,
      { 
        parse_mode: 'Markdown',
        reply_to_message_id: ctx.message.message_id
      }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
bot.hears(/–ø—Ä–∏–≤–µ—Ç|–±–æ—Ç|–∂–æ–ø–∞|—Å–∞–ª—é—Ç|–ø–æ–º–æ—â—å/i, (ctx) => {
  const userName = ctx.from.first_name || '–¥—Ä—É–≥';
  ctx.reply(
    `*${userName}*, —è –∑–¥–µ—Å—å! üöÄ`,
    { 
      parse_mode: 'Markdown',
      reply_to_message_id: ctx.message.message_id 
    }
  );
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–ë–ï–ó –≤–µ–±—Ö—É–∫–æ–≤)
bot.launch().then(() => console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'));

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on("uncaughtException", (err) => console.error("–û—à–∏–±–∫–∞:", err));
process.on("unhandledRejection", (err) => console.error("–û—à–∏–±–∫–∞:", err));
