const { Telegraf } = require('telegraf');
const express = require('express');
const app = express();

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
app.use(express.json());
app.use(bot.webhookCallback('/'));

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–ø–ª–∞–µ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
bot.on('message', async (ctx) => {
  const reply = ctx.message.reply_to_message;
  if (reply && reply.from.username === ctx.botInfo.username) {
    const userName = ctx.from.first_name || '–¥—Ä—É–≥';
    await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç, *${userName}*! –ß–µ–º –ø–æ–º–æ—á—å? üòä`,
      { 
        parse_mode: 'Markdown',
        reply_to_message_id: ctx.message.message_id
      }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –õ–Æ–ë–´–• —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
bot.hears(['–ø—Ä–∏–≤–µ—Ç', '—Å—Ç–∞—Ä—Ç', '–±–æ—Ç', '–ø–æ–º–æ—â—å'], (ctx) => {
  const userName = ctx.from.first_name || '–¥—Ä—É–≥';
  ctx.reply(`*${userName}*, —è –∑–¥–µ—Å—å! –ü—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å –º–Ω–µ —Ä–µ–ø–ª–∞–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å. üöÄ`, 
    { parse_mode: 'Markdown' }
  );
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(process.env.PORT || 3000, () => {
  bot.launch(); // –ó–∞–ø—É—Å–∫ Long Polling
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ Long Polling!');
});
