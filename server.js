const { Telegraf } = require('telegraf');
const express = require('express');
const app = express();

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
app.use(express.json());
app.use(bot.webhookCallback('/')); // –ü—É—Ç—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞

// –õ–æ–≥–∏–∫–∞ –±–æ—Ç–∞
bot.on('message', async (ctx) => {
  const reply = ctx.message.reply_to_message;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–ø–ª–∞–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
  if (reply && reply.from.username === ctx.botInfo.username) {
    const userName = ctx.from.first_name || '–¥—Ä—É–≥';
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–µ–∑ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç, *${userName}*! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? üòä`,
      { 
        parse_mode: 'Markdown', 
        reply_to_message_id: ctx.message.message_id // –û—Ç–≤–µ—Ç –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      }
    );
  }
});

bot.hears(['–ø—Ä–∏–≤–µ—Ç', '—Å—Ç–∞—Ä—Ç'], (ctx) => {
  ctx.reply('–†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ß–µ–º –ø–æ–º–æ—á—å?');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(process.env.PORT || 3000, () => {
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫!');
});
