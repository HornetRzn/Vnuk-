const { Telegraf } = require('telegraf');
require('dotenv').config();  // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å .env —Ñ–∞–π–ª–æ–º

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
bot.telegram.getMe().then((botInfo) => {
  bot.botInfo = botInfo;
  console.log(`–ë–æ—Ç @${botInfo.username} –∑–∞–ø—É—â–µ–Ω!`);
});

// –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ —Ä–µ–ø–ª–∞–∏ (–±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ –µ–º—É –æ—Ç–≤–µ—á–∞–µ—Ç)
bot.on('message', async (ctx) => {
  console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', ctx.message.text);
  const reply = ctx.message.reply_to_message;
  if (reply && reply.from.id === ctx.botInfo.id) {
    const userName = ctx.from.first_name || '–¥—Ä—É–≥';
    await ctx.reply(
      `–ü—Ä–∏–≤–µ—Ç, *${userName}*! –ß–µ–º –ø–æ–º–æ—á—å? üòä`,
      { 
        parse_mode: 'Markdown',
        reply_to_message_id: ctx.message.message_id
      }
    );
  }
});

// –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
bot.hears(/–ø—Ä–∏–≤–µ—Ç|–±–æ—Ç|–∂–æ–ø–∞|—Å–∞–ª—é—Ç|–ø–æ–º–æ—â—å/i, (ctx) => {
  const userName = ctx.from.first_name || '–¥—Ä—É–≥';
  ctx.reply(
    `*${userName}*, —è –∑–¥–µ—Å—å! üöÄ`,
    { 
      parse_mode: 'Markdown',
      reply_to_message_id: ctx.message.message_id 
    }
  );
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç 24/7)
bot.launch().then(() => console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'));

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
process.on("uncaughtException", (err) => console.error("–û—à–∏–±–∫–∞:", err));
process.on("unhandledRejection", (err) => console.error("–û—à–∏–±–∫–∞:", err));